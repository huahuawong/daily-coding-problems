#1 Let's say if we want to move the zeroes in an array to the back of an array

def moveZerosToEnd(arr, n):
    count = 0
    for i in range(n):
        if arr[i] != 0:
            arr[count] = arr[i]
            count += 1

    while count < n:
        arr[count] = 0
        count += 1

    return arr

# Drive code
arr = [1, 10, 0, 2, 8, 3, 0, 0, 6, 4, 0, 5, 7, 0, 0, 8, 9, 7]
n = len(arr)
print(moveZerosToFront(arr, n))


###########################################################################################################################################
#2 Situation is reversed, bring the zeroes to the front

def moveZerosToFront(arr, n):
    count = 0
    for i in range(n):
        if arr[i] != 0:
            arr[count] = arr[i]
            count += 1

    for i in range(count, n-1):
        arr.pop()

    while count < n:
        var = 0
        arr.insert(0, var)
        count += 1

    return arr
    
# Driver code
arr = [1, 10, 0, 2, 8, 3, 0, 0, 6, 4, 0, 5, 7, 0, 0, 8, 9, 7]
n = len(arr)
print(moveZerosToFront(arr, n))

###########################################################################################################################################

#3 Given an array, rotate the array to the right by k steps, where k is non-negative.

For example:
Input: [1,2,3,4,5,6,7] and k = 3
Output: [5,6,7,1,2,3,4]

input = [1, 2, 3, 4, 5, 6, 7]
k = 3


def rotate_input(arr):
    pop_arr = []
    for i in range(0, k):
        pop_var = arr.pop()
        pop_arr.insert(0, pop_var)

    output = pop_arr + arr

    return output


print(rotate_input(input))


Or even easier:

def rotate(nums, k):
      n = len(nums)
      k = k % n
      nums[:] = nums[n-k:] + nums[:n-k]

      return nums





